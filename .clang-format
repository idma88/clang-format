BasedOnStyle: Mozilla
# AccessModifierOffset: -2
AlignAfterOpenBracket: Align
AlignConsecutiveAssignments: AcrossComments
AlignConsecutiveDeclarations: AcrossComments
AlignConsecutiveMacros: AcrossComments
AlignEscapedNewlines: Right
AlignOperands: true
AlignTrailingComments: true

AllowAllArgumentsOnNextLine: false
AllowAllConstructorInitializersOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false

AllowShortBlocksOnASingleLine: Empty
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: false
AllowShortFunctionsOnASingleLine: Inline
AllowShortIfStatementsOnASingleLine: WithoutElse
AllowShortLambdasOnASingleLine: Inline
AllowShortLoopsOnASingleLine: false

AlwaysBreakAfterReturnType: AllDefinitions
AlwaysBreakBeforeMultilineStrings: false
AlwaysBreakTemplateDeclarations: Yes

BinPackArguments: false
BinPackParameters: false

BitFieldColonSpacing: Both
BraceWrapping:
  AfterCaseLabel:         false
  AfterClass:             true # FIXME: Not work
  AfterControlStatement:  Never
  AfterEnum:              true
  AfterFunction:          true
  AfterNamespace:         false
  AfterStruct:            true
  AfterUnion:             true
  AfterExternBlock:       true
  BeforeCatch:            false
  BeforeElse:             false
  BeforeLambdaBody:       false
  BeforeWhile:            false
  IndentBraces:           false
  SplitEmptyFunction:     false # FIXME: Not work
  SplitEmptyRecord:       false # FIXME: Not work
  SplitEmptyNamespace:    false # FIXME: Not work

BreakBeforeBinaryOperators: None
BreakBeforeBraces: Custom # Mozilla
BreakBeforeConceptDeclarations: true
BreakBeforeInheritanceComma: false
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeComma
BreakInheritanceList: BeforeComma
BreakStringLiterals: true

ColumnLimit: 100
# CommentPragmas: '^ IWYU pragma:'
CompactNamespaces: false
ConstructorInitializerAllOnOneLineOrOnePerLine: false
ConstructorInitializerIndentWidth: 2
ContinuationIndentWidth: 2
Cpp11BracedListStyle: false
DeriveLineEnding: false
DerivePointerAlignment: false
DisableFormat: false
EmptyLineBeforeAccessModifier: Always
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH

IncludeBlocks: Regroup
IncludeCategories: # TODO
  - Regex:           'stdafx\.h' # Precompiled headers
    Priority:        -1
  - Regex:           '<[[:alnum:]_.]+>' # Standart libraries
    Priority:        1
  - Regex:           '^<(.+\/)' # Other libraries (Boost, QT, SFML, ext/ or lib/, etc)
    Priority:        2
  - Regex:           '.*'
    Priority:        3

IndentCaseBlocks: true
IndentCaseLabels: true
IndentExternBlock: Indent
IndentGotoLabels: false
IndentPPDirectives: BeforeHash
IndentRequires: false
IndentWidth: 2
IndentWrappedFunctionNames: false

KeepEmptyLinesAtTheStartOfBlocks: false
Language: Cpp

# MacroBlockBegin: ''
# MacroBlockEnd: ''

MaxEmptyLinesToKeep: 1
NamespaceIndentation: None

PointerAlignment: Left
ReflowComments: true

SortIncludes: true
SortUsingDeclarations: true

SpaceAfterCStyleCast: false
SpaceAfterLogicalNot: false
SpaceAfterTemplateKeyword: false
SpaceAroundPointerQualifiers: Default
SpaceBeforeAssignmentOperators: true
SpaceBeforeCaseColon: false
SpaceBeforeCpp11BracedList: true
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeSquareBrackets: false
SpaceInEmptyBlock: false
SpaceInEmptyParentheses: false
SpacesBeforeTrailingComments: 1
SpacesInAngles: false
SpacesInCStyleCastParentheses: false
SpacesInConditionalStatement: false
SpacesInContainerLiterals: true
SpacesInParentheses: false
SpacesInSquareBrackets: false

Standard: c++14
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
TabWidth: 2

UseCRLF: true
UseTab: Never
